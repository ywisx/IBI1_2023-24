
# refer to https://pypi.org/project/blosum/
import blosum as bl
matrix = bl.BLOSUM(62)


SLC6A4_HUMAN="METTPLNSQKQLSACEDGEDCQENGVLQKVVPTPGDKVESGQISNGYSAVPSPGAGDDT\
RHSIPATTTTLVAELHQGERETWGKKVDFLLSVIGYAVDLGNVWRFPYICYQNGGGAFL\
LPYTIMAIFGGIPLFYMELALGQYHRNGCISIWRKICPIFKGIGYAICIIAFYIASYYNTIMA\
WALYYLISSFTDQLPWTSCKNSWNTGNCTNYFSEDNITWTLHSTSPAEEFYTRHVLQI\
HRSKGLQDLGGISWQLALCIMLIFTVIYFSIWKGVKTSGKVVWVTATFPYIILSVLLVRGA\
TLPGAWRGVLFYLKPNWQKLLETGVWIDAAAQIFFSLGPGFGVLLAFASYNKFNNNCY\
QDALVTSVVNCMTSFVSGFVIFTVLGYMAEMRNEDVSEVAKDAGPSLLFITYAEAIANM\
PASTFFAIIFFLMLITLGLDSTFAGLEGVITAVLDEFPHVWAKRRERFVLAVVITCFFGSL\
VTLTFGGAYVVKLLEEYATGPAVLTVALIEAVAVSWFYGITQFCRDVKEMLGFSPGWF\
WRICWVAISPLFLLFIICSFLMSPPQLRLFQYNYPYWSIILGYCIGTSSFICIPTYIAYRLIITP\
GTFKERIIKSITPETPTEIPCGDIRLNAV"

SLC6A4_MOUSE="METTPLNSQKVLSECKDKEDCQENGVLQKGVPTPADKAGPGQISNGYSAVPSTSAGDEA\
PHSTPAATTTLVAEIHQGERETWGKKMDFLLSVIGYAVDLGNIWRFPYICYQNGGGAFL\
LPYTIMAIFGGIPLFYMELALGQYHRNGCISIWKKICPIFKGIGYAICIIAFYIASYYNTIIAW\
ALYYLISSFTDQLPWTSCKNSWNTGNCTNYFAQDNITWTLHSTSPAEEFYLRHVLQIHQ\
SKGLQDLGTISWQLALCIMLIFTIIYFSIWKGVKTSGKVVWVTATFPYIVLSVLLVRGATL\
PGAWRGVVFYLKPNWQKLLETGVWVDAAAQIFFSLGPGFGVLLAFASYNKFNNNCYQ\
DALVTSVVNCMTSFVSGFVIFTVLGYMAEMRNEDVSEVAKDAGPSLLFITYAEAIANMP\
ASTFFAIIFFLMLITLGLDSTFAGLEGVITAVLDEFPHIWAKRREWFVLIVVITCILGSLLT\
LTSGGAYVVTLLEEYATGPAVLTVALIEAVVVSWFYGITQFCSDVKEMLGFSPGWFWRI\
CWVAISPLFLLFIICSFLMSPPQLRLFQYNYPHWSIILGYCIGTSSVICIPIYIIYRLISTPGTL\
KERIIKSITPETPTEIPCGDIRMNAV"

SLC6A4_RAT="METTPLNSQKVLSECKDREDCQENGVLQKGVPTTADRAEPSQISNGYSAVPSTSAGDEA\
SHSIPAATTTLVAEIRQGERETWGKKMDFLLSVIGYAVDLGNIWRFPYICYQNGGGAFLL\
PYTIMAIFGGIPLFYMELALGQYHRNGCISIWRKICPIFKGIGYAICIIAFYIASYYNTIIAWA\
LYYLISSLTDRLPWTSCTNSWNTGNCTNYFAQDNITWTLHSTSPAEEFYLRHVLQIHQS\
KGLQDLGTISWQLTLCIVLIFTVIYFSIWKGVKTSGKVVWVTATFPYIVLSVLLVRGATLP\
GAWRGVVFYLKPNWQKLLETGVWVDAAAQIFFSLGPGFGVLLAFASYNKFNNNCYQD\
ALVTSVVNCMTSFVSGFVIFTVLGYMAEMRNEDVSEVAKDAGPSLLFITYAEAIANMPA\
STFFAIIFFLMLITLGLDSTFAGLEGVITAVLDEFPHIWAKRREWFVLIVVITCVLGSLLTL\
TSGGAYVVTLLEEYATGPAVLTVALIEAVAVSWFYGITQFCSDVKEMLGFSPGWFWRIC\
WVAISPLFLLFIICSFLMSPPQLRLFQYNYPHWSIVLGYCIGMSSVICIPTYIIYRLISTPGTL\
KERIIKSITPETPTEIPCGDIRMNAV"

# Calculate the sum of the amino acid similarities corresponding to the two sequences M(i)x and M(i)y.
# Then the similarities of all matched subsequences are accumulated to get the overall similarity of the two sequences. Where.
# b denotes the substitution matrix, |M(i)x',y'| denotes the length of the matched subsequences, and h denotes the number of matched subsequences.

def get_distance(i, j):
    d = matrix[i][j]
    # print("(%s,%s) return %f" % (i, j, d))
    return d


def dumSeq(name, s):
    print(s)
    i = 0
    for	c in s:
        print(c,  end='')
        i = i + 1
        #new line after 100 chars
        if( i > 100):
            print("")
            i=0
    print("\n")
    
def calc_seq_distance(a, b):
    distance = 0
    identical = 0
    for	i in range(len(a)):
        d = get_distance(a[i], b[i])
        distance += d
        if a[i] == b[i]:
            identical += 1
            
    percentage = identical * 100.0 / len(a)

    return (distance, percentage)


# LEN = len(SLC6A4_HUMAN)
dumSeq("human", SLC6A4_HUMAN)
dumSeq("mouse", SLC6A4_MOUSE)
dumSeq("rat", SLC6A4_RAT)


distance, percentage = calc_seq_distance(SLC6A4_HUMAN, SLC6A4_MOUSE)
print("human vs mouse  identity percentage = %%%f, score=%d" % (percentage, distance))
print("-------------------------------------------------------")

distance, percentage = calc_seq_distance(SLC6A4_HUMAN, SLC6A4_RAT)
print("human vs rat  identity percentage = %%%f, score=%d" % (percentage, distance))
print("-------------------------------------------------------")

distance, percentage = calc_seq_distance(SLC6A4_MOUSE, SLC6A4_RAT)
print("mouse vs rat  identity percentage = %%%f, score=%d" % (percentage, distance))


# result = calc_seq_distance(SLC6A4_RAT, SLC6A4_HUMAN)
# print("rat vs mouse = %d" % (result))
